name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  VERSION_ID: '1.0.0'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Change to Rust project directory
      run: cd rust_example/for_loop/

    - name: Generate unique version ID
      id: version_id
      run: echo "COMBINED_VERSION_ID=${{ env.VERSION_ID }}-$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      
    - name: Build with Cargo
      run: cargo build --release --verbose
      working-directory: rust_example/for_loop/

    - name: Zip MacOS Build
      run: zip -j rust_example/for_loop/target/release/for_loop-${{ env.COMBINED_VERSION_ID }}.zip rust_example/for_loop/target/release/for_loop

    - uses: actions/upload-artifact@v4
      with:
        name: for_loop-${{ env.COMBINED_VERSION_ID }}.zip 
        path: rust_example/for_loop/target/release/for_loop-${{ env.COMBINED_VERSION_ID }}.zip   

    - name: Set COMBINED_VERSION_ID as output
      id: set_output
      run: echo "combined_version_id=${{ env.COMBINED_VERSION_ID }}" >> $GITHUB_OUTPUT

  create-release:
    needs: [build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download MacOS Artifact
        uses: actions/download-artifact@v4
        with:
          path: rust_example/for_loop/target/release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build-macos.outputs.combined_version_id }}
          release_name: Release v${{ needs.build-macos.outputs.combined_version_id }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (macos)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: rust_example/for_loop/target/release           
          asset_name: for_loop-${{ needs.build-macos.outputs.combined_version_id }}.zip           
          asset_content_type: application/zip
